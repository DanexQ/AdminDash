-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;

CREATE TYPE rola as ENUM('pracownik','kierownik','admin');
CREATE TYPE status as ENUM('do zrobienia','w trakcie','gotowe','zablokowane');
CREATE TABLE IF NOT EXISTS public.komentarze
(
    komentarz_id serial NOT NULL,
    tresc text COLLATE pg_catalog."default" NOT NULL,
    uzytkownik_id serial NOT NULL,
    utworzony timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    zadanie_id serial NOT NULL,
    zmodyfikowano timestamp with time zone,
    CONSTRAINT komentarze_pkey PRIMARY KEY (komentarz_id)
);

CREATE TABLE IF NOT EXISTS public.projekty
(
    projekt_id serial NOT NULL,
    nazwa character varying(50) COLLATE pg_catalog."default" NOT NULL,
    utworzony timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT projekty_pkey PRIMARY KEY (projekt_id)
);

CREATE TABLE IF NOT EXISTS public.uzytkownicy
(
    uzytkownik_id serial NOT NULL,
    imie character varying(50) COLLATE pg_catalog."default" NOT NULL,
    nazwisko character varying(50) COLLATE pg_catalog."default" NOT NULL,
    stanowisko character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "dzia≈Ç" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    rola rola NOT NULL,
    email character varying(100) COLLATE pg_catalog."default" NOT NULL,
    haslo text COLLATE pg_catalog."default" NOT NULL,
    utworzony timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    nr_tel numeric(9, 0),
    kierownik_id serial NOT NULL,
    czy_aktywny boolean NOT NULL DEFAULT TRUE,
    ostatnie_logowanie timestamp with time zone,
    CONSTRAINT unique_id PRIMARY KEY (uzytkownik_id),
    CONSTRAINT unique_email UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.zadania
(
    zadanie_id serial NOT NULL,
    nazwa character varying(50) COLLATE pg_catalog."default" NOT NULL,
    opis text COLLATE pg_catalog."default",
    status status NOT NULL,
    projekt_id serial NOT NULL,
    utworzone timestamp with time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
    zmodyfikowano timestamp with time zone,
    CONSTRAINT zadania_pkey PRIMARY KEY (zadanie_id)
);

CREATE TABLE IF NOT EXISTS public.zadania_uzytkownicy
(
    zadania_zytkownicy_id serial NOT NULL,
    zadania_zadanie_id serial NOT NULL,
    uzytkownicy_uzytkownik_id serial NOT NULL,
    CONSTRAINT zadania_uzytkownicy_pkey PRIMARY KEY (zadania_zytkownicy_id)
);

ALTER TABLE IF EXISTS public.komentarze
    ADD CONSTRAINT komentarze_zadanie_id_fkey FOREIGN KEY (zadanie_id)
    REFERENCES public.zadania (zadanie_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;
CREATE INDEX IF NOT EXISTS zadanie_id_fk_ix
    ON public.komentarze(zadanie_id);


ALTER TABLE IF EXISTS public.komentarze
    ADD FOREIGN KEY (uzytkownik_id)
    REFERENCES public.uzytkownicy (uzytkownik_id) MATCH SIMPLE
    ON UPDATE SET NULL
    ON DELETE SET NULL
    NOT VALID;


ALTER TABLE IF EXISTS public.zadania
    ADD CONSTRAINT zadania_projekt_id_fkey FOREIGN KEY (projekt_id)
    REFERENCES public.projekty (projekt_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.zadania_uzytkownicy
    ADD CONSTRAINT zadania_uzytkownicy_uzytkownicy_uzytkownik_id_fkey FOREIGN KEY (uzytkownicy_uzytkownik_id)
    REFERENCES public.uzytkownicy (uzytkownik_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public.zadania_uzytkownicy
    ADD CONSTRAINT zadania_uzytkownicy_zadania_zadanie_id_fkey FOREIGN KEY (zadania_zadanie_id)
    REFERENCES public.zadania (zadanie_id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    NOT VALID;

END;